{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/item-status-filter/item-status-filter.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","props","className","toDo","done","ItemStatusFilter","buttons","name","label","map","btn","activeClassName","filter","type","onClick","onFilter","role","aria-label","Component","SearchPanel","onSearch","e","target","value","placeholder","onChange","this","TodoListItem","onDeleted","onToggleDone","onToggleImportant","important","classNames","TodoList","todos","elements","item","id","itemProps","key","ItemAddForm","state","onLabelChange","setState","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","term","deleteItem","index","findIndex","el","slice","addItem","text","newItem","search","items","length","toLowerCase","indexOf","toggleProperty","arr","propName","oldItem","toDoCount","doneCount","visibleItems","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.f81b0618.chunk.js","sourcesContent":["import AppHeader from './app-header'\r\n\r\nexport default AppHeader","import React from 'react'\r\nimport './app-header.css'\r\n\r\nconst AppHeader = (props) => {\r\n    return (\r\n        <div className=\"text-center mt-4 app-header\">\r\n            <h1>Todo app</h1>\r\n            <p className=\"text-secondary mt-2 mb-3\">\r\n                {`${props.toDo} tasks to do, ${props.done} done`}\r\n            </p>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default AppHeader","import React, { Component } from 'react'\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n\r\n    render() {\r\n        const buttonsCollection = [\r\n            { name: 'all', label: 'All' },\r\n            { name: 'active', label: 'Active' },\r\n            { name: 'done', label: 'Done' }\r\n        ]\r\n\r\n        const buttons = buttonsCollection.map(btn => {\r\n            const isActive = btn.name === this.props.filter\r\n            const activeClassName = isActive ? 'btn-info' : 'btn-outline-info'\r\n\r\n            return (\r\n                <button type=\"button\"\r\n                    onClick={() => this.props.onFilter(btn.name)}\r\n                    className={`btn ${activeClassName}`}\r\n\r\n                >\r\n                    {btn.label}\r\n                </button>\r\n            )\r\n        })\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"btn-group ml-2\" role=\"group\" aria-label=\"Basic example\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import SearchPanel from './search-panel'\r\n\r\nexport default SearchPanel","import React, { Component } from 'react'\r\nimport './search-panel.css'\r\nimport ItemStatusFilter from '../item-status-filter/item-status-filter'\r\n\r\nclass SearchPanel extends Component {\r\n    onSearch = (e) => {\r\n        this.props.onSearch(e.target.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search-panel d-flex flex-wrap justify-content-center mt-3\">\r\n                <input placeholder=\"Type task to search\"\r\n                    onChange={this.onSearch}\r\n                    className=\"form-control col-lg-3 col-md-6 col-sm-8 col-12\"\r\n                />\r\n                <ItemStatusFilter onFilter={this.props.onFilter} filter={this.props.filter} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchPanel","import React, { Component } from 'react'\r\nimport './todo-list-item.css'\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n    render() {\r\n        const {\r\n            label, onDeleted, onToggleDone,\r\n            onToggleImportant, important, done\r\n        } = this.props\r\n\r\n        let classNames = 'todo-list-item-text'\r\n\r\n        if (done) {\r\n            classNames += ' todo-list-item-done'\r\n        }\r\n\r\n        if (important) {\r\n            classNames += ' todo-list-item-important'\r\n        }\r\n\r\n        return (\r\n            <div className=\"todo-list-item\">\r\n                <span\r\n                    onClick={onToggleDone}\r\n                    className={classNames}\r\n                >\r\n                    {label}\r\n                </span >\r\n                <div className=\"todo-list-buttons\">\r\n                    <button type=\"button\"\r\n                        onClick={onToggleImportant}\r\n                        className=\"btn btn-outline-success mr-2\"\r\n                    >\r\n                        <i className=\"fa fa-exclamation\"></i>\r\n                    </button>\r\n\r\n                    <button type=\"button\"\r\n                        onClick={onDeleted}\r\n                        className=\"btn btn-outline-danger\"\r\n                    >\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import TodoList from './todo-list'\r\n\r\nexport default TodoList","import React from 'react'\r\nimport TodoListItem from '../todo-list-item/todo-list-item'\r\nimport './todo-list.css'\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleDone, onToggleImportant }) => {\r\n    const elements = todos.map(item => {\r\n        const { id, ...itemProps } = item;\r\n\r\n        return (\r\n            <li key={id} className=\"todo-list-item list-group-item\">\r\n                <TodoListItem\r\n                    onDeleted={() => { onDeleted(id) }}\r\n                    onToggleDone={() => onToggleDone(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                    {...itemProps}\r\n                />\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <ul className=\"todo-list list-group mt-3\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default TodoList","import ItemAddForm from './item-add-form'\r\n\r\nexport default ItemAddForm","import React, { Component } from 'react'\r\n\r\nimport './item-add-form.css'\r\nimport { render } from '@testing-library/react'\r\n\r\nexport default class ItemAddForm extends Component {\r\n    state = {\r\n        label: ''\r\n    }\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.onItemAdded(this.state.label)\r\n        this.setState({\r\n            label: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"mt-3 justify-content-center d-flex\" onSubmit={this.onSubmit}>\r\n                <input className=\"form-control mr-1\"\r\n                    onChange={this.onLabelChange}\r\n                    value={this.state.label}\r\n                    placeholder=\"Anything to do?\"\r\n                />\r\n                <button className=\"btn btn-outline-success\">Add</button>\r\n            </form>\r\n        )\r\n    }\r\n}","import App from './app'\r\n\r\nexport default App","import React, { Component } from 'react'\r\n\r\nimport AppHeader from '../app-header'\r\nimport SearchPanel from '../search-panel'\r\nimport TodoList from '../todo-list'\r\nimport ItemAddForm from '../item-add-form'\r\n\r\nimport './app.css'\r\n\r\nexport default class App extends Component {\r\n  maxId = 100 //just to demonstrate, in real project id will come from the side of server\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('Add, edit and do your todos'),\r\n    ],\r\n    term: '',\r\n    filter: '' //all, done or active\r\n  }\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++\r\n    }\r\n  }\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    const index = arr.findIndex(el => el.id === id)\r\n\r\n    const oldItem = arr[index]\r\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] }\r\n\r\n\r\n    return [\r\n      ...arr.slice(0, index),\r\n      newItem,\r\n      ...arr.slice(index + 1)\r\n    ]\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      const index = todoData.findIndex(el => el.id === id)\r\n\r\n      const todoDataCopy = [\r\n        ...todoData.slice(0, index),\r\n        ...todoData.slice(index + 1)\r\n      ]\r\n\r\n      return {\r\n        todoData: todoDataCopy\r\n      }\r\n    })\r\n  }\r\n\r\n  addItem = (text) => {\r\n    this.setState(({ todoData }) => {\r\n      const newItem = this.createTodoItem(text)\r\n\r\n      return {\r\n        todoData: [\r\n          ...todoData,\r\n          newItem\r\n        ]\r\n      }\r\n    })\r\n  }\r\n\r\n  onSearch = (term) => {\r\n    this.setState({term})\r\n  }\r\n\r\n  search = (items, term) => {\r\n    if (term.length === 0 || term === '' || term === ' ') {\r\n      return items\r\n    }\r\n    return items.filter(item => item.label.toLowerCase().indexOf(term.toLowerCase()) > -1)\r\n\r\n  }\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'done')\r\n      }\r\n    })\r\n  }\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'important')\r\n      }\r\n    })\r\n  }\r\n\r\n  onFilter = (filter) => {\r\n    this.setState({filter})\r\n  }\r\n\r\n  filter = (items, filter) => {\r\n    switch(filter) {\r\n      case 'all': \r\n        return items\r\n      case 'done': \r\n        return items.filter(item => item.done)\r\n      case 'active':\r\n        return items.filter(item => !item.done)\r\n      default: \r\n        return items\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const toDoCount = this.state.todoData.filter(el => !el.done).length\r\n    const doneCount = this.state.todoData.length - toDoCount\r\n    const visibleItems = this.filter(this.search(this.state.todoData, this.state.term), this.state.filter)\r\n\r\n    return (\r\n      <div className=\"container\" >\r\n        <AppHeader toDo={toDoCount} done={doneCount} />\r\n        <SearchPanel onSearch={this.onSearch} onFilter={this.onFilter} filter={this.state.filter} />\r\n        <TodoList\r\n          onDeleted={this.deleteItem}\r\n          todos={visibleItems}\r\n          onToggleDone={this.onToggleDone}\r\n          onToggleImportant={this.onToggleImportant}\r\n        />\r\n        <ItemAddForm onItemAdded={this.addItem} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport App from './components/app'\r\n\r\nReactDom.render(<App />, document.getElementById('root'))"],"sourceRoot":""}